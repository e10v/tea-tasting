name: ci
on:
  pull_request:
    paths:
      - '**.py'
      - '.github/workflows/ci.yml'
      - 'pyproject.toml'
  push:
    branches: [main]
    paths:
      - '**.py'
      - '.github/workflows/ci.yml'
      - 'pyproject.toml'
  workflow_dispatch:
jobs:
  doctest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          cache-suffix: "${{ matrix.python-version }}-test"
          enable-cache: true
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: uv sync --group test
      - name: doctest with pytest
        run: |
          pytest \
            --doctest-continue-on-failure \
            --doctest-glob=*.md \
            --doctest-modules \
            --ignore=examples/ \
            --ignore=tests/ \
            --ignore-glob=src/_* \
  test-lowest:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          cache-suffix: "${{ matrix.python-version }}-test-lowest"
          enable-cache: true
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: uv sync --group test --resolution lowest-direct
      - name: test-lowest with pytest
        run: pytest
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          cache-suffix: "${{ matrix.python-version }}-test"
          enable-cache: true
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: uv sync --group test
      - name: test with pytest
        run: coverage run -m pytest
      - name: convert coverage report
        run: coverage xml
      - name: upload coverage reports to codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          cache-suffix: "${{ matrix.python-version }}-lint"
          enable-cache: true
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: uv sync --group lint --group test
      - name: check with ruff
        run: ruff check .
      - name: check with pyright
        run: pyright
